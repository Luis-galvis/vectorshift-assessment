{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lgalv\\\\Desktop\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integration-form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Autocomplete, TextField } from '@mui/material';\nimport { NotionIntegration, NotionConfig } from './integrations/notion';\nimport { AirtableIntegration, AirtableConfig } from './integrations/airtable';\nimport { HubspotIntegration, HubspotConfig } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n\n  // To connect hubspot with authO, a request is sent to backend. In response we get a URL for hubspot authorization.\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // When the hubspot is authorized, we fetch credentials from the backend.\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: 'HubSpot'\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: isConnected ? () => {} : handleConnectClick,\n          color: isConnected ? 'success' : 'primary',\n          disabled: isConnecting,\n          style: {\n            pointerEvents: isConnected ? 'none' : 'auto',\n            cursor: isConnected ? 'default' : 'pointer',\n            opacity: isConnected ? 1 : undefined\n          },\n          children: isConnected ? 'HubSpot Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 77\n          }, this) : 'Connect to HubSpot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(HubSpotIntegration, \"YVzh0k4rAm9dKRmEfKk5oscD40o=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","Box","Autocomplete","TextField","NotionIntegration","NotionConfig","AirtableIntegration","AirtableConfig","HubspotIntegration","HubspotConfig","DataForm","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","axios","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","useEffect","children","sx","mt","display","alignItems","justifyContent","Button","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","CircularProgress","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lgalv/Desktop/integrations_technical_assessment/frontend/src/integration-form.js"],"sourcesContent":["import { useState } from 'react';\nimport {\n    Box,\n    Autocomplete,\n    TextField,\n} from '@mui/material';\nimport { NotionIntegration, NotionConfig } from './integrations/notion';\nimport { AirtableIntegration, AirtableConfig } from './integrations/airtable';\nimport { HubspotIntegration, HubspotConfig } from './integrations/hubspot';\nimport { DataForm } from './data-form';\nexport const HubSpotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    // To connect hubspot with authO, a request is sent to backend. In response we get a URL for hubspot authorization.\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n            const authURL = response?.data;\n            const newWindow = window.open(authURL, 'HubSpot Authorization', 'width=600, height=600');\n            const pollTimer = window.setInterval(() => {\n                if (newWindow?.closed !== false) {\n                    window.clearInterval(pollTimer);\n                    handleWindowClosed();\n                }\n            }, 200)\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    // When the hubspot is authorized, we fetch credentials from the backend.\n    const handleWindowClosed = async () => {\n        try {\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n            const credentials = response.data;\n            if (credentials) {\n                setIsConnecting(false);\n                setIsConnected(true);\n                setIntegrationParams(prev => ({ ...prev, credentials: credentials, type: 'HubSpot' }));\n            }\n            setIsConnecting(false);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e?.response?.data?.detail);\n        }\n    }\n\n    useEffect(() => {\n        setIsConnected(integrationParams?.credentials ? true : false)\n    }, [])\n\n    return (\n        <>\n            {/* Code to display the connection buttons */}\n            <Box sx={{ mt: 2 }}>\n                Parameters\n                <Box display='flex' alignItems='center' justifyContent='center' sx={{ mt: 2 }}>\n                    <Button\n                        variant='contained'\n                        onClick={isConnected ? () => { } : handleConnectClick}\n                        color={isConnected ? 'success' : 'primary'}\n                        disabled={isConnecting}\n                        style={{\n                            pointerEvents: isConnected ? 'none' : 'auto',\n                            cursor: isConnected ? 'default' : 'pointer',\n                            opacity: isConnected ? 1 : undefined\n                        }}\n                    >\n                        {isConnected ? 'HubSpot Connected' : isConnecting ? <CircularProgress size={20} /> : 'Connect to HubSpot'}\n                    </Button>\n                </Box>\n            </Box>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}