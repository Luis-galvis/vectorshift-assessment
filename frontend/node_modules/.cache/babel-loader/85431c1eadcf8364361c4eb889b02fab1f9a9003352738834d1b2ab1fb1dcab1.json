{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lgalv\\\\Desktop\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\hubspot.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\n\n// frontend/src/integrations/hubspot.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HubspotIntegration = ({\n  user,\n  org,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const handleConnect = async () => {\n    try {\n      setIsConnecting(true);\n\n      // 1. Obtener URL de autorización (GET con query params)\n      const authResponse = await fetch(`http://localhost:8000/integrations/hubspot/authorize?user_id=${user}&org_id=${org}`, {\n        method: 'GET'\n      });\n      if (!authResponse.ok) {\n        const errorData = await authResponse.json();\n        throw new Error(errorData.detail || 'Error al obtener URL de autorización');\n      }\n      const {\n        url\n      } = await authResponse.json();\n      const authWindow = window.open(url, 'HubSpot Auth', 'width=600,height=600');\n\n      // 2. Verificar credenciales después de cerrar ventana\n      const checkCredentials = async () => {\n        try {\n          const response = await fetch(`http://localhost:8000/integrations/hubspot/credentials?user_id=${user}&org_id=${org}`);\n          const credentials = await response.json();\n          setIntegrationParams({\n            credentials,\n            type: 'HubSpot'\n          });\n        } catch (error) {\n          console.error('Error obteniendo credenciales:', error);\n        }\n      };\n      ;\n      const interval = setInterval(() => {\n        if (authWindow.closed) {\n          clearInterval(interval);\n          checkCredentials();\n        }\n      }, 500);\n    } catch (error) {\n      console.error('Error de conexión:', error);\n      setIsConnecting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleConnect,\n        disabled: isConnecting || isConnected,\n        color: isConnected ? 'success' : 'primary',\n        startIcon: isConnecting && /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 48\n        }, this),\n        children: isConnected ? 'Conectado a HubSpot' : 'Conectar con HubSpot'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n// Configuración para el formulario\n_s(HubspotIntegration, \"WD2YJOlxQtU8NjiZHP5ODHeC/nM=\");\n_c = HubspotIntegration;\nexport const HubspotConfig = {\n  name: 'HubSpot',\n  slug: 'hubspot',\n  authorizeUrl: '/integrations/hubspot/authorize'\n};\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["useState","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","HubspotIntegration","user","org","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnect","authResponse","fetch","method","ok","errorData","json","Error","detail","url","authWindow","window","open","checkCredentials","response","credentials","type","error","console","interval","setInterval","closed","clearInterval","sx","mt","children","display","alignItems","justifyContent","variant","onClick","disabled","color","startIcon","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","HubspotConfig","name","slug","authorizeUrl","$RefreshReg$"],"sources":["C:/Users/lgalv/Desktop/integrations_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["import { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CircularProgress\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\n\r\n// frontend/src/integrations/hubspot.js\r\nexport const HubspotIntegration = ({ user, org, setIntegrationParams }) => {\r\n    const [isConnected, setIsConnected] = useState(false);\r\n    const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n    const handleConnect = async () => {\r\n        try {\r\n            setIsConnecting(true);\r\n            \r\n            // 1. Obtener URL de autorización (GET con query params)\r\n            const authResponse = await fetch(\r\n                `http://localhost:8000/integrations/hubspot/authorize?user_id=${user}&org_id=${org}`,\r\n                { method: 'GET' }\r\n            );\r\n\r\n            if (!authResponse.ok) {\r\n                const errorData = await authResponse.json();\r\n                throw new Error(errorData.detail || 'Error al obtener URL de autorización');\r\n            }\r\n\r\n            const { url } = await authResponse.json();\r\n            const authWindow = window.open(url, 'HubSpot Auth', 'width=600,height=600');\r\n\r\n            // 2. Verificar credenciales después de cerrar ventana\r\n            const checkCredentials = async () => {\r\n                try {\r\n                    const response = await fetch(\r\n                      `http://localhost:8000/integrations/hubspot/credentials?user_id=${user}&org_id=${org}`\r\n                    );\r\n                    const credentials = await response.json();\r\n                    setIntegrationParams({ credentials, type: 'HubSpot' });\r\n                  } catch (error) {\r\n                    console.error('Error obteniendo credenciales:', error);\r\n                  }\r\n                };;\r\n\r\n            const interval = setInterval(() => {\r\n                if (authWindow.closed) {\r\n                    clearInterval(interval);\r\n                    checkCredentials();\r\n                }\r\n            }, 500);\r\n\r\n        } catch (error) {\r\n            console.error('Error de conexión:', error);\r\n            setIsConnecting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ mt: 2 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    onClick={handleConnect}\r\n                    disabled={isConnecting || isConnected}\r\n                    color={isConnected ? 'success' : 'primary'}\r\n                    startIcon={isConnecting && <CircularProgress size={20} />}\r\n                >\r\n                    {isConnected ? 'Conectado a HubSpot' : 'Conectar con HubSpot'}\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n// Configuración para el formulario\r\nexport const HubspotConfig = {\r\n    name: 'HubSpot',\r\n    slug: 'hubspot',\r\n    authorizeUrl: '/integrations/hubspot/authorize'\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}