{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lgalv\\\\Desktop\\\\integrations_technical_assessment\\\\frontend\\\\src\\\\integrations\\\\notion.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\n\n// Componente de integraci贸n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotionIntegration = ({\n  user,\n  org,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append('user_id', user);\n      formData.append('org_id', org);\n      const response = await axios.post('http://localhost:8000/integrations/notion/authorize', formData);\n      const newWindow = window.open(response.data, 'Notion Authorization', 'width=600,height=600');\n      const pollTimer = setInterval(() => {\n        if (newWindow !== null && newWindow !== void 0 && newWindow.closed) {\n          clearInterval(pollTimer);\n          checkNotionCredentials();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail) || 'Error connecting to Notion');\n    }\n  };\n  const checkNotionCredentials = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/integrations/notion/credentials', {\n        user_id: user,\n        org_id: org\n      });\n      if (response.data) {\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: response.data,\n          type: 'Notion'\n        }));\n        setIsConnected(true);\n      }\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      alert(((_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail) || 'Error getting credentials');\n    }\n    setIsConnecting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleConnectClick,\n        color: isConnected ? 'success' : 'primary',\n        disabled: isConnecting || isConnected,\n        children: isConnected ? 'Notion Connected' : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }, this) : 'Connect to Notion'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n// Configuraci贸n para el formulario\n_s(NotionIntegration, \"WD2YJOlxQtU8NjiZHP5ODHeC/nM=\");\n_c = NotionIntegration;\nexport const NotionConfig = {\n  name: 'Notion',\n  slug: 'notion',\n  authorizeUrl: '/integrations/notion/authorize'\n};\nvar _c;\n$RefreshReg$(_c, \"NotionIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","axios","jsxDEV","_jsxDEV","NotionIntegration","user","org","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","handleConnectClick","formData","FormData","append","response","post","newWindow","window","open","data","pollTimer","setInterval","closed","clearInterval","checkNotionCredentials","e","_e$response","_e$response$data","alert","detail","user_id","org_id","prev","credentials","type","_e$response2","_e$response2$data","sx","mt","children","display","alignItems","justifyContent","variant","onClick","color","disabled","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","NotionConfig","name","slug","authorizeUrl","$RefreshReg$"],"sources":["C:/Users/lgalv/Desktop/integrations_technical_assessment/frontend/src/integrations/notion.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Box, Button, CircularProgress } from '@mui/material';\nimport axios from 'axios';\n\n// Componente de integraci贸n\nexport const NotionIntegration = ({ user, org, setIntegrationParams }) => {\n    const [isConnected, setIsConnected] = useState(false);\n    const [isConnecting, setIsConnecting] = useState(false);\n\n    const handleConnectClick = async () => {\n        try {\n            setIsConnecting(true);\n            const formData = new FormData();\n            formData.append('user_id', user);\n            formData.append('org_id', org);\n            \n            const response = await axios.post(\n                'http://localhost:8000/integrations/notion/authorize', \n                formData\n            );\n            \n            const newWindow = window.open(response.data, 'Notion Authorization', 'width=600,height=600');\n            \n            const pollTimer = setInterval(() => {\n                if (newWindow?.closed) {\n                    clearInterval(pollTimer);\n                    checkNotionCredentials();\n                }\n            }, 200);\n        } catch (e) {\n            setIsConnecting(false);\n            alert(e.response?.data?.detail || 'Error connecting to Notion');\n        }\n    };\n\n    const checkNotionCredentials = async () => {\n        try {\n            const response = await axios.post(\n                'http://localhost:8000/integrations/notion/credentials',\n                { user_id: user, org_id: org }\n            );\n            \n            if (response.data) {\n                setIntegrationParams(prev => ({\n                    ...prev,\n                    credentials: response.data,\n                    type: 'Notion'\n                }));\n                setIsConnected(true);\n            }\n        } catch (e) {\n            alert(e.response?.data?.detail || 'Error getting credentials');\n        }\n        setIsConnecting(false);\n    };\n\n\n\n    return (\n        <Box sx={{ mt: 2 }}>\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" sx={{ mt: 2 }}>\n                <Button\n                    variant=\"contained\"\n                    onClick={handleConnectClick}\n                    color={isConnected ? 'success' : 'primary'}\n                    disabled={isConnecting || isConnected}\n                >\n                    {isConnected ? 'Notion Connected' : \n                     isConnecting ? <CircularProgress size={20} /> : 'Connect to Notion'}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\n// Configuraci贸n para el formulario\nexport const NotionConfig = {\n    name: 'Notion',\n    slug: 'notion',\n    authorizeUrl: '/integrations/notion/authorize'\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}